<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.backend.mapper.MovieMapper">
    <resultMap id="movieList" type="com.example.backend.response.movie.MovieResponse">
        <id property="id" column="id"></id>
        <result property="id" column="id"></result>
        <result property="name" column="name"></result>
        <result property="description" column="description"></result>
        <result property="cover" column="cover"></result>
        <result property="originalName" column="original_name"></result>
        <result property="homePage" column="home_page"></result>
        <result property="startDate" column="start_date"></result>
        <result property="endDate" column="end_date"></result>
        <result property="status" column="status"></result>
        <result property="time" column="time"></result>
        <result property="cinemaCount" column="cinema_count"></result>
        <result property="theaterCount" column="theater_count"></result>
        <result property="commentCount" column="comment_count"></result>
        <result property="watchedCount" column="watched_count"></result>
        <result property="wantToSeeCount" column="want_to_see_count"></result>
        <result property="levelId" column="level_id"></result>
        <result property="levelName" column="level_name"></result>
        <result property="levelDescription" column="level_description"></result>
    </resultMap>
    <!--    根据电影id 获取标签 -->
    <select id="getMovieTags" resultType="com.example.backend.response.movie.Tags">
        SELECT
            movie_tag.id AS id,
            movie_tag.name AS name
        FROM
            movie_tag
        LEFT JOIN movie_tag_tags ON movie_tag.id = movie_tag_tags.movie_tag_id
        WHERE
            movie_tag_tags.movie_id =#{movieId}
    </select>
    <!--    根据电影id 获取上映规格 -->
    <select id="getMovieSpec" resultType="com.example.backend.entity.CinemaSpec">
        SELECT
            cinema_spec.id,
            cinema_spec.name,
            cinema_spec.description
        FROM
            cinema_spec
                LEFT JOIN movie_spec ON movie_spec.spec_id = cinema_spec.id
        WHERE
            movie_spec.movie_id =#{movieId}
    </select>
    <select id="getHelloMovie" resultType="com.example.backend.response.movie.HelloMovie">
        SELECT
            hello_movie.id,
            hello_movie.code,
            hello_movie.date
        FROM
            hello_movie
        WHERE
            hello_movie.movie_id =#{movieId}
    </select>
    <select id="getMovieCommentCount" resultType="integer">
        SELECT
            COUNT(movie_comment.id) + COUNT(movie_reply.id) AS comment_count
        FROM
            movie_comment
                LEFT JOIN movie_reply ON movie_comment.id = movie_reply.movie_comment_id AND movie_reply.deleted = 0
        WHERE
            movie_comment.movie_id = #{movieId}
            AND movie_comment.deleted = 0
        GROUP BY
            movie_comment.movie_id
    </select>
    <!--    获取电影所有上映的影院数量 -->
    <select id="getAllCinemaCount" resultType="integer">
        SELECT
--             movie_show_time.movie_id,
            COUNT(DISTINCT movie_show_time.cinema_id) AS cinema_count
        FROM
            movie_show_time
        WHERE
            movie_show_time.deleted = 0
            AND movie_show_time.movie_id = #{movieId}
        GROUP BY
            movie_show_time.movie_id
    </select>
    <!--    获取电影上映的所有场次数量-->
    <select id="getAllTheaterCount" resultType="integer">
        SELECT
--             movie_show_time.movie_id,
            COUNT(movie_show_time.cinema_id) AS theater_count
        FROM
            movie_show_time
        WHERE
            movie_show_time.deleted = 0
            AND movie_show_time.movie_id = #{movieId}
        GROUP BY
            movie_show_time.movie_id
    </select>
    <select id="movieList" resultMap="movieList" resultType="com.example.backend.response.movie.MovieResponse">
            SELECT
                movie.*,
                level.name AS level_name
            FROM
                movie
            LEFT JOIN level ON movie.level_id = level.id
            <where>
                movie.deleted = 0
                <if test="query.id != null">
                    AND movie.id = #{query.id}
                </if>
                <if test="query.name != null and !query.name.equals('')">
                    AND movie.name LIKE concat('%', #{query.name}, '%')
                </if>
                <if test="query.status != null and !query.status.equals('')">
                    AND movie.status = #{query.status}
                </if>
            </where>
            ORDER BY movie.update_time DESC
    </select>
    <resultMap id="appMovieStaff" type="com.example.backend.response.app.AppMovieStaffResponse">
        <id property="id" column="id"></id>
        <result property="id" column="staff_id"></result>
        <result property="avatar" column="staff_avatar"></result>
        <result property="name" column="staff_name"></result>
        <collection property="position" ofType="com.example.backend.entity.Position">
            <result property="id" column="positon_id"></result>
            <result property="name" column="position_name"></result>
        </collection>
    </resultMap>
    <select id="appMovieStaff" resultMap="appMovieStaff">
        SELECT
            staff.id AS staff_id,
            staff.name AS staff_name,
            staff.cover AS staff_avatar,
            position.id AS positon_id,
            position.name AS position_name
        FROM movie_staff
                 LEFT JOIN staff ON movie_staff.staff_id = staff."id"
                 LEFT JOIN "position" ON movie_staff.position_id = "position"."id"
        WHERE
            movie_staff.deleted = 0
            AND movie_staff.movie_id = #{movieId}
    </select>
    <resultMap id="nowMovieShowing" type="com.example.backend.response.app.NowMovieShowingResponse">
        <id property="id" column="id"></id>
        <result property="id" column="id"></result>
        <result property="cover" column="cover"></result>
        <result property="name" column="name"></result>
        <result property="startDate" column="start_date"></result>

        <result property="levelName" column="level_name"></result>
        <collection property="spec" ofType="com.example.backend.response.Spec">
            <result property="id" column="spec_id"></result>
            <result property="name" column="spec_name"></result>
            <result property="description" column="spec_description"></result>
        </collection>
        <collection property="cast" ofType="com.example.backend.response.Staff">
            <result property="id" column="staff_id"></result>
            <result property="name" column="staff_name"></result>
        </collection>
        <collection property="helloMovie" ofType="com.example.backend.response.movie.HelloMovie">
            <result property="id" column="hello_movie_id"></result>
            <result property="code" column="hello_movie_code"></result>
            <result property="date" column="hello_movie_date"></result>
        </collection>
    </resultMap>

    <select id="nowMovieShowing" resultMap="nowMovieShowing">
        SELECT
            movie.id,
            movie.name,
            movie.cover,
            level.name AS level_name,
            hello_movie.id AS hello_movie_id,
            hello_movie.code AS hello_movie_code,
            hello_movie.date AS hello_movie_date,
            TO_TIMESTAMP(movie_show_time.start_time, 'YYYY-MM-DD HH24:MI:SS') AS show_time
        FROM movie_show_time
                 LEFT JOIN movie ON movie_show_time.movie_id = movie.id
                 LEFT JOIN level ON movie.level_id = level.id
                 LEFT JOIN hello_movie ON movie.id = hello_movie.movie_id
        WHERE movie_show_time.deleted = 0
          AND TO_TIMESTAMP(movie_show_time.start_time, 'YYYY-MM-DD HH24:MI:SS') >= CURRENT_TIMESTAMP
          AND movie_show_time.open = TRUE
        ORDER BY TO_TIMESTAMP(movie_show_time.start_time, 'YYYY-MM-DD HH24:MI:SS') DESC


    </select>
    <select id="getMovieComingSoon" resultType="com.example.backend.entity.Movie">
        SELECT movie.*
        FROM "movie"
        WHERE
            movie.deleted = 0
          AND (
                movie.start_date IS NULL
                OR movie.start_date = ''
                OR TO_DATE(
                     CASE
                         WHEN movie.start_date LIKE '____-__-__' THEN movie.start_date  -- 完整日期
                         WHEN movie.start_date LIKE '____-__' THEN movie.start_date || '-01'  -- 补充日期
                         WHEN movie.start_date LIKE '____' THEN movie.start_date || '-01-01'  -- 补充年月日
                         ELSE '1900-01-01'  -- 默认值
                         END, 'YYYY-MM-DD'
                       ) >= CURRENT_DATE  -- 筛选发布日期大于今天
            )
        ORDER BY
            CASE
                WHEN movie.start_date IS NULL OR movie.start_date = '' THEN 1  -- 如果没有日期数据，排到最后
                ELSE 0  -- 有日期数据的排在前面
                END,
            TO_DATE(
              CASE
                  WHEN movie.start_date LIKE '____-__-__' THEN movie.start_date  -- 完整日期
                  WHEN movie.start_date LIKE '____-__' THEN movie.start_date || '-01'  -- 补充日期
                  WHEN movie.start_date LIKE '____' THEN movie.start_date || '-01-01'  -- 补充年月日
                  ELSE '1900-01-01'  -- 默认值
                  END, 'YYYY-MM-DD'
                ) ASC

    </select>
    <select id="movieDetail" resultMap="movieList">
        SELECT
            movie.*,
            level.name AS level_name,
            level.description AS level_description
        FROM
            movie
                LEFT JOIN level ON movie.level_id = level.id
        WHERE
            movie.id = #{id}
    </select>
    <select id="getMovieRate" resultType="com.example.backend.response.movie.MovieResponse">
        SELECT
            movie_rate.movie_id,
            round(AVG(rate), 1) AS rate,
            COUNT(rate) AS total_ratings
        FROM
            movie_rate
        WHERE
            movie_rate.movie_id = #{id}
        GROUP BY movie_id
    </select>
    <resultMap id="movieStaffList" type="com.example.backend.response.MovieStaffResponse">
        <result property="id" column="position_id"></result>
        <result property="name" column="position_name"></result>
        <collection property="staff" ofType="com.example.backend.response.Staff">
            <result property="id" column="staff_id"></result>
            <result property="name" column="staff_name"></result>
            <result property="cover" column="staff_cover"></result>
        </collection>
    </resultMap>
    <select id="movieStaffList" resultMap="movieStaffList">
        SELECT
            position.id as position_id,
            position.name as position_name,
            staff.id as staff_id,
            staff.name as staff_name,
            staff.cover as staff_cover
        FROM movie_staff
            LEFT JOIN position ON movie_staff.position_id = position.id
            LEFT JOIN staff ON movie_staff.staff_id = staff.id
        WHERE
            movie_staff.deleted = 0 AND
            movie_staff.movie_id = #{id}
    </select>
    <resultMap id="movieCharacterList" type="com.example.backend.response.MovieCharacterResponse">
        <result property="id" column="character_id"></result>
        <result property="name" column="character_name"></result>
        <result property="cover" column="character_cover"></result>
        <collection property="staff" ofType="com.example.backend.response.Staff">
            <result property="id" column="staff_id"></result>
            <result property="name" column="staff_name"></result>
        </collection>
    </resultMap>
    <select id="movieCharacterList" resultMap="movieCharacterList">
        SELECT
            character.id as character_id,
            character.name as character_name,
            character.cover as character_cover,
            staff.id as staff_id,
            staff.name as staff_name
        FROM
            movie_character
                LEFT JOIN character ON movie_character.character_id = character.id
                LEFT JOIN staff_character ON staff_character.character_id = character.id
                LEFT JOIN staff ON staff_character.staff_id = staff.id
        WHERE
            movie_character.deleted = 0 AND
            movie_character.movie_id = #{id}
    </select>
    <resultMap id="getMovieShowTime" type="com.example.backend.response.app.AppBeforeMovieShowTimeResponse">
        <result property="cinemaId" column="cinema_id"></result>
        <result property="cinemaName" column="cinema_name"></result>
        <result property="cinemaAddress" column="cinema_address"></result>
        <result property="startTime" column="start_time"></result>
        <result property="endTime" column="end_time"></result>
    </resultMap>
    <select id="getMovieShowTime" resultMap="getMovieShowTime">

        SELECT
            cinema.id AS cinema_id,
            cinema.name AS cinema_name,
            cinema.address AS cinema_address,
            movie_show_time.start_time AS start_time,
            movie_show_time.end_time AS end_time
        FROM
            movie_show_time
                LEFT JOIN cinema ON movie_show_time.cinema_id = cinema."id"
        WHERE
            movie_show_time.deleted = 0
             AND movie_show_time.status = #{showTimeState}
             AND movie_show_time.movie_id = #{query.movieId}
             AND TO_TIMESTAMP(movie_show_time.start_time, 'YYYY-MM-DD HH24:MI:SS') >= now()
    </select>
</mapper>