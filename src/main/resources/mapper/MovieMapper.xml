<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.backend.mapper.MovieMapper">
    <resultMap id="movieList" type="com.example.backend.response.MovieResponse">
        <id property="id" column="id"></id>
        <result property="id" column="id"></result>
        <result property="name" column="name"></result>
        <result property="description" column="description"></result>
        <result property="cover" column="endTime"></result>
        <result property="original_name" column="original_name"></result>
        <result property="home_page" column="home_page"></result>
        <result property="start_date" column="start_date"></result>
        <result property="end_date" column="end_date"></result>
        <result property="status" column="status"></result>
        <result property="time" column="time"></result>
        <result property="comment_count" column="comment_count"></result>
        <result property="watched_count" column="watched_count"></result>
        <result property="want_to_see_count" column="want_to_see_count"></result>
        <collection property="spec" ofType="com.example.backend.response.Spec">
            <result property="id" column="spec_id"></result>
            <result property="name" column="spec_name"></result>
            <result property="description" column="spec_description"></result>
        </collection>
    </resultMap>
        <select id="movieList" resultMap="movieList">
            SELECT
                movie.*,
                COALESCE(comment_counts.comment_count, 0) AS comment_count,
                cinema_spec.id AS spec_id,
                cinema_spec.name AS spec_name,
                cinema_spec.description AS spec_description
            FROM
                movie
            LEFT JOIN (
                SELECT
                    movie_comment.movie_id,
                    COUNT(DISTINCT movie_comment.id) + COUNT(DISTINCT movie_reply.id) AS comment_count
                FROM
                    movie_comment
                LEFT JOIN movie_reply ON movie_comment.id = movie_reply.movie_comment_id AND movie_reply.deleted = 0
                WHERE
                    movie_comment.deleted = 0
                GROUP BY
                    movie_comment.movie_id
                ) AS comment_counts ON movie.id = comment_counts.movie_id
            LEFT JOIN movie_spec ON movie.id = movie_spec.movie_id
            LEFT JOIN cinema_spec ON movie_spec.spec_id = cinema_spec.id
            <where>
                movie.deleted = 0
                <if test="query.id != null">
                    AND movie.id = #{query.id}
                </if>
                <if test="query.name != null and !query.name.equals('')">
                    AND movie.name LIKE concat('%', #{query.name}, '%')
                </if>
                <if test="query.status != null and !query.status.equals('')">
                    AND movie.status = #{query.status}
                </if>
            </where>
            ORDER BY movie.update_time ASC
        </select>
    <select id="movieDetail" resultMap="movieList">
        SELECT
            movie.*,
            cinema_spec.id AS spec_id,
            cinema_spec.name AS spec_name,
            cinema_spec.description AS spec_description
        FROM
            movie
                LEFT JOIN movie_spec ON movie.id = movie_spec.movie_id
                LEFT JOIN cinema_spec ON movie_spec.spec_id = cinema_spec.id
        WHERE
            movie.id = #{id}
    </select>
    <resultMap id="movieStaffList" type="com.example.backend.response.MovieStaffResponse">
        <result property="id" column="position_id"></result>
        <result property="name" column="position_name"></result>
        <collection property="staff" ofType="com.example.backend.response.Staff">
            <result property="id" column="staff_id"></result>
            <result property="name" column="staff_name"></result>
        </collection>
    </resultMap>
    <select id="movieStaffList" resultMap="movieStaffList">
        SELECT
            position.id as position_id,
            position.name as position_name,
            staff.id as staff_id,
            staff.name as staff_name
        FROM movie_staff
            LEFT JOIN position ON movie_staff.position_id = position.id
            LEFT JOIN staff ON movie_staff.staff_id = staff.id
        WHERE
            movie_staff.deleted = 0 AND
            movie_staff.movie_id = #{id}
    </select>
    <resultMap id="movieCharacterList" type="com.example.backend.response.MovieCharacterResponse">
        <result property="id" column="character_id"></result>
        <result property="name" column="character_name"></result>
        <collection property="staff" ofType="com.example.backend.response.Staff">
            <result property="id" column="staff_id"></result>
            <result property="name" column="staff_name"></result>
        </collection>
    </resultMap>
    <select id="movieCharacterList" resultMap="movieCharacterList">
        SELECT
            character.id as character_id,
            character.name as character_name,
            staff.id as staff_id,
            staff.name as staff_name
        FROM
            movie_character
                LEFT JOIN character ON movie_character.character_id = character.id
                LEFT JOIN staff_character ON staff_character.character_id = character.id
                LEFT JOIN staff ON staff_character.staff_id = staff.id
        WHERE
            movie_character.deleted = 0 AND
            movie_character.movie_id = #{id}
    </select>
</mapper>