<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.backend.mapper.CinemaMapper">
    <resultMap id="cinemaList" type="com.example.backend.response.CinemaResponse">
        <id property="id" column="id"></id>
        <result property="id" column="id"></result>
        <result property="name" column="name"></result>
        <result property="description" column="description"></result>
        <result property="address" column="address"></result>
        <result property="tel" column="tel"></result>
        <result property="homePage" column="home_page"></result>
        <result property="maxSelectSeatCount" column="max_select_seat_count"></result>
        <result property="theaterCount" column="theater_count"></result>
        <result property="brandId" column="brand_id"></result>
        <result property="brandName" column="brand_name"></result>
    </resultMap>
        <select id="getCinemaSpec" resultType="com.example.backend.response.Spec">
            SELECT
                cinema_spec.id,
                cinema_spec.name,
                cinema_spec.description,
                cinema_spec_spec.plus_price
            FROM cinema_spec_spec
                     LEFT JOIN cinema_spec ON cinema_spec_spec.spec_id = cinema_spec.id
            WHERE
                cinema_spec_spec.deleted = 0 AND
                cinema_spec_spec.cinema_id = #{cinemaId}
        </select>
        <select id="cinemaList" resultMap="cinemaList">
            SELECT
            cinema.id,
            cinema.name,
            cinema.description,
            cinema.address,
            cinema.home_page,
            cinema.tel,
            cinema.max_select_seat_count,
            brand.id as brand_id,
            brand.name as brand_name,
            (
                SELECT
                    COUNT(theater_hall.cinema_id)
                    FROM theater_hall
                    WHERE
                        theater_hall.cinema_id = cinema.id AND
                        theater_hall.deleted = 0
                ) AS theater_count
            FROM cinema
            LEFT JOIN brand ON cinema.brand_id = brand.id
            <where>
                cinema.deleted = 0
                <if test="query.name != null and !query.name.equals('')">
                    AND cinema.name LIKE concat('%', #{query.name}, '%')
                </if>
                <if test="query.id != null and !query.id.equals('')">
                    AND cinema.id = #{query.id}
                </if>
            </where>
        </select>
        <select id="cinemaDetail" resultMap="cinemaList">
            SELECT
                cinema.id,
                cinema.name,
                cinema.description,
                cinema.address,
                cinema.home_page,
                cinema.max_select_seat_count,
                cinema.tel,
                brand.id as brand_id,
                brand.name as brand_name,
                (
                    SELECT
                        COUNT(theater_hall.cinema_id)
                        FROM theater_hall
                    WHERE
                        theater_hall.cinema_id = cinema.id AND
                        theater_hall.deleted = 0
                ) AS theater_count
            FROM cinema
            LEFT JOIN brand ON cinema.brand_id = brand.id
            WHERE
                cinema.id = #{id}
        </select>

    <resultMap id="getCinemaMovieShowTimeList" type="com.example.backend.response.app.GetCinemaMovieShowTimeListResponse">
        <result property="cinemaId" column="cinema_id"/>
        <result property="cinemaName" column="cinema_name"/>
        <result property="cinemaAddress" column="cinema_address"/>
        <result property="cinemaTel" column="cinema_tel"/>

        <!-- 集合映射，DateGroup -->
        <collection property="data" ofType="com.example.backend.response.app.DateGroup">
            <result property="date" column="date"/>
            <!-- 时间集合映射，Time -->
            <collection property="data" ofType="com.example.backend.response.app.TheaterHallShowTime">
                <result property="id" column="id"/>
                <result property="startTime" column="start_time"/>
                <result property="endTime" column="end_time"/>
                <result property="specName" column="spec_name"/>
                <result property="theaterHallId" column="theater_hall_id"/>
                <result property="theaterHallName" column="theater_hall_name"/>
            </collection>
        </collection>
    </resultMap>
    <select id="getCinemaMovieShowTimeList" resultMap="getCinemaMovieShowTimeList">
        SELECT
            movie_show_time.id AS id,
            cinema.id AS cinema_id,
            cinema.name AS cinema_name,
            cinema.address AS cinema_address,
            cinema.tel as cinema_tel,
            TO_CHAR(movie_show_time.start_time::date, 'YYYY-MM-DD') AS date,
            TO_CHAR(movie_show_time.start_time::timestamp, 'HH24:MI') AS start_time,
            TO_CHAR(movie_show_time.end_time::timestamp, 'HH24:MI') AS end_time,
            theater_hall.id as theater_hall_id,
            theater_hall.name as theater_hall_name,
            cinema_spec.name as spec_name
        FROM
            movie_show_time
        LEFT JOIN cinema ON movie_show_time.cinema_id = cinema.id
        LEFT JOIN theater_hall ON movie_show_time.theater_hall_id = theater_hall."id"
        LEFT JOIN cinema_spec ON movie_show_time.spec_id = cinema_spec.id
        WHERE
            movie_show_time.deleted = 0
            AND movie_show_time.cinema_id = #{query.cinemaId}
            AND movie_show_time.movie_id = #{query.movieId}
         AND TO_TIMESTAMP(movie_show_time.start_time, 'YYYY-MM-DD HH24:MI:SS') >= now()
        GROUP BY
            date, movie_show_time.id, cinema.id, cinema.name, cinema.address, cinema.tel, movie_show_time.start_time, movie_show_time.end_time, theater_hall.id, theater_hall."name", cinema_spec.name
        ORDER BY
            date, movie_show_time.start_time
    </select>
    <!--  获取影院正在上映的电影  -->
    <select id="getMovieShowing" resultType="com.example.backend.response.cinema.MovieShowingResponse">
        SELECT DISTINCT(movie.id),
                       movie."name",
                       movie.cover as poster,
                       movie."time",
                       level."name" as levelName
        FROM movie_show_time
                 LEFT JOIN movie ON movie_show_time.movie_id = movie.id
                 LEFT JOIN "level" ON movie.level_id = level.id
        WHERE
            movie_show_time.cinema_id = #{id}
           AND movie_show_time."open" = TRUE
           AND TO_TIMESTAMP(movie_show_time.start_time, 'YYYY-MM-DD HH24:MI:SS') > now()
          AND movie_show_time.deleted = 0
    </select>
</mapper>